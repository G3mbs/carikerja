# CodeRabbit Configuration for CariKerja
# AI-powered code review configuration

# Language and framework specific settings
language: typescript
framework: nextjs

# Review settings
reviews:
  # Enable auto-review on pull requests
  auto_review: true
  
  # Review focus areas
  focus:
    - security
    - performance
    - best_practices
    - type_safety
    - accessibility
    - seo
    
  # Specific checks for Next.js applications
  nextjs:
    - api_routes
    - server_components
    - client_components
    - image_optimization
    - routing
    - middleware
    
  # Database and backend checks
  backend:
    - sql_injection
    - authentication
    - authorization
    - data_validation
    - error_handling
    
  # Frontend specific checks
  frontend:
    - react_hooks
    - state_management
    - component_structure
    - prop_types
    - accessibility

# File patterns to review - SPECIFIC FOLDERS
include:
  # API Routes - High Priority Review
  - "src/app/api/**/*.ts"
  - "src/app/api/**/*.js"

  # Components - UI/UX Review
  - "src/components/**/*.tsx"
  - "src/components/**/*.ts"

  # Library/Utils - Logic Review
  - "src/lib/**/*.ts"
  - "src/lib/**/*.js"

  # Types - Type Safety Review
  - "src/types/**/*.ts"

  # Database Scripts - Security Review
  - "database/**/*.sql"
  - "database/**/*.js"

  # Configuration Files
  - "*.config.ts"
  - "*.config.js"
  - "package.json"
  - "tsconfig.json"

# File patterns to exclude from review
exclude:
  - "node_modules/**"
  - ".next/**"
  - "dist/**"
  - "build/**"
  - "coverage/**"
  - "*.min.js"
  - "*.bundle.js"
  - "package-lock.json"
  - "examples/**"
  - "docs/**"
  - "tests/**"
  - "scripts/**"

# Folder-specific review rules
folder_rules:
  # API Routes - Security Focus
  "src/app/api/**":
    priority: "high"
    focus:
      - security
      - authentication
      - input_validation
      - error_handling
    rules:
      - name: "api_security_check"
        pattern: "(req\\.|request\\.)"
        message: "Ensure proper request validation and sanitization"
        severity: "high"
      - name: "response_security"
        pattern: "NextResponse\\."
        message: "Verify response doesn't leak sensitive information"
        severity: "medium"

  # Components - UI/Performance Focus
  "src/components/**":
    priority: "medium"
    focus:
      - performance
      - accessibility
      - react_best_practices
      - prop_validation
    rules:
      - name: "react_hooks_usage"
        pattern: "use[A-Z]"
        message: "Ensure hooks are used correctly and efficiently"
        severity: "medium"
      - name: "component_props"
        pattern: "interface.*Props"
        message: "Verify prop types are properly defined"
        severity: "low"

  # Library/Utils - Logic Focus
  "src/lib/**":
    priority: "high"
    focus:
      - logic_correctness
      - error_handling
      - performance
      - type_safety
    rules:
      - name: "async_error_handling"
        pattern: "async.*function"
        message: "Ensure proper error handling in async functions"
        severity: "high"
      - name: "utility_exports"
        pattern: "export.*function"
        message: "Verify utility functions are properly typed and documented"
        severity: "medium"

  # Database - Security Focus
  "database/**":
    priority: "critical"
    focus:
      - security
      - sql_injection
      - data_integrity
      - performance
    rules:
      - name: "sql_security"
        pattern: "(INSERT|UPDATE|DELETE|SELECT)"
        message: "Review SQL query for security vulnerabilities"
        severity: "high"
      - name: "migration_safety"
        pattern: "(DROP|ALTER)"
        message: "Ensure migration is safe and reversible"
        severity: "critical"

# Custom rules for CariKerja project
custom_rules:
  # API security rules
  - name: "api_key_exposure"
    pattern: "(MISTRAL_API_KEY|BROWSER_USE_API_KEY|SUPABASE_SERVICE_ROLE_KEY)"
    message: "Potential API key exposure. Ensure this is properly secured."
    severity: "high"
    files: ["src/app/api/**/*.ts", "src/lib/**/*.ts"]

  # Database query security
  - name: "sql_injection_risk"
    pattern: "\\$\\{.*\\}"
    files: ["src/app/api/**/*.ts", "src/lib/**/*.ts"]
    message: "Potential SQL injection risk. Use parameterized queries."
    severity: "high"

  # Environment variable usage
  - name: "env_var_usage"
    pattern: "process\\.env\\."
    files: ["src/**/*.ts", "src/**/*.js"]
    message: "Environment variable usage detected. Ensure proper validation."
    severity: "medium"

  # Supabase security
  - name: "supabase_rls"
    pattern: "supabase.*\\.from\\("
    files: ["src/app/api/**/*.ts", "src/lib/**/*.ts"]
    message: "Ensure Row Level Security (RLS) is enabled for this table."
    severity: "medium"

# AI review preferences
ai_settings:
  # Review style
  tone: "constructive"
  detail_level: "detailed"
  
  # Focus on Indonesian market context
  context:
    - "Indonesian job market application"
    - "Bahasa Indonesia support required"
    - "Local compliance considerations"
    - "Performance for Indonesian users"
    
  # Specific attention areas
  priorities:
    - "Security vulnerabilities"
    - "Performance optimizations"
    - "Code maintainability"
    - "TypeScript best practices"
    - "React/Next.js patterns"
    - "Database security"
    - "API design"

# Integration settings
integrations:
  # GitHub settings
  github:
    # Auto-approve minor changes
    auto_approve_minor: false
    
    # Request changes for critical issues
    request_changes_on: ["high", "critical"]
    
    # Comment on specific lines
    inline_comments: true
    
    # Summary comments
    summary_comments: true

# Notification settings
notifications:
  # When to notify
  on_review_complete: true
  on_critical_issues: true
  on_security_issues: true
  
  # Notification channels
  channels:
    - github_comments
    - github_reviews

# Learning and improvement
learning:
  # Learn from feedback
  learn_from_feedback: true
  
  # Adapt to project patterns
  adapt_to_codebase: true
  
  # Improve over time
  continuous_improvement: true
